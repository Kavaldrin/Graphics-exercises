#ifndef __GUIMyFrame1__
#define __GUIMyFrame1__

/**
@file
Subclass of MyFrame1, which is generated by wxFormBuilder.
*/

#include "GUI.h"
#include "vecmat.h"

//// end generated include

#include <wx/filedlg.h>
#include <wx/dcmemory.h>
#include <wx/dcclient.h>
#include <wx/dcbuffer.h>
#include <wx/colourdata.h>
#include <wx/colordlg.h>

struct Point {
	float x, y, z;
	Point(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}
};

struct Color {
	int R, G, B;
	Color(int _R, int _G, int _B) : R(_R), G(_G), B(_B) {}
};

struct Segment {
	Point begin, end;
	Color color;
	Segment(Point _begin, Point _end, Color _color) : begin(_begin), end(_end), color(_color) {}
};


/** Implementing MyFrame1 */
class GUIMyFrame1 : public MyFrame1
{
	protected:
		// Handlers for MyFrame1 events.
		void WxPanel_Repaint( wxUpdateUIEvent& event );
		void m_button_load_geometry_click( wxCommandEvent& event );
		void Scrolls_Updated( wxScrollEvent& event );
		void drawShape(Matrix4 &t1, Matrix4 &t2, wxDC *dc);
		Matrix4 Translacja(double x, double y, double z);
		Matrix4 RotacjaX(double kat);
		Matrix4 RotacjaY(double kat);
		Matrix4 RotacjaZ(double kat);
		Matrix4 Skalowanie(double x, double y, double z);
		void Normalizuj(Vector4 &vec);
		void line2d(wxDC *dc, Matrix4 &t1, Matrix4 &t2, Point &p1, Point &p2);
		Matrix4 Perspektywa();
		Matrix4 Dopasuj(double w, double h);
		void typuCohen(Vector4 &v1, Vector4 &v2, Matrix4 &t2);

		///

	public:
		/** Constructor */
		GUIMyFrame1( wxWindow* parent );
	//// end generated class members
  void Repaint();
};




#endif // __GUIMyFrame1__
